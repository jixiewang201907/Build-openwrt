#============================================================================================
# https://github.com/ophub/amlogic-s9xxx-openwrt
# Description: 电视盒子编译+IMG打包
#============================================================================================

name: N1-new

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      source_branch:
        description: "immortalwrt"
        required: false
        default: "immortalwrt-master"
        type: choice
        options:
          - openwrt-main
          - lede-master
          - immortalwrt-master
          - Lienol-master
      openwrt_board:
        description: "N1-s905d"
        required: false
        default: "s905d"
        type: choice
        options:
          - s905d
      openwrt_kernel:
        description: "Select kernel version"
        required: false
        default: "5.15.x_6.1.x"
        type: choice
        options:
          - 5.15.x_6.1.x
          - 5.4.x
      auto_kernel:
        description: "Auto use the latest kernel"
        required: false
        default: true
        type: boolean
      kernel_repo:
        description: "Set the kernel repository"
        required: false
        default: "ophub/kernel"
        type: choice
        options:
          - ophub/kernel
      kernel_usage:
        description: "Set the tags of the stable kernel."
        required: false
        default: "stable"
        type: choice
        options:
          - stable
          - flippy
          - dev
          - beta
      openwrt_storage:
        description: "Select image storage type."
        required: false
        default: "save"
        type: choice
        options:
          - save
          - temp
      builder_name:
        description: "Set OpenWrt builder signature."
        required: false
        default: "angel"
        type: choice
        options:
          - angel
          - yourname

env:
  FEEDS_CONF: config/${{ inputs.source_branch }}/feeds.conf.default
  CONFIG_FILE: config/${{ inputs.source_branch }}/N1-config
  DIY_P1_SH: config/${{ inputs.source_branch }}/N1-diy-part1.sh
  DIY_P2_SH: config/${{ inputs.source_branch }}/N1-diy-part2.sh
  TZ: America/New_York

jobs:
  build:
    runs-on: ubuntu-22.04
    if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Initialization environment
        id: init
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
          sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android 2>/dev/null
          sudo -E apt-get -y update
          sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
          sudo -E apt-get -y install $(curl -fsSL https://is.gd/depend_ubuntu2204_openwrt)
          sudo -E systemctl daemon-reload
          #sudo -E apt-get -y full-upgrade
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo mkdir -p /workdir
          sudo chown ${USER}:${GROUPS} /workdir
          sudo timedatectl set-timezone "${TZ}"
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Clone source code [ ${{ inputs.source_branch }} ]
        id: codes
        working-directory: /workdir
        if: ${{ steps.init.outputs.status }} == 'success' && !cancelled()
        run: |
          # Set up compilation source code
          if [[ "${{ inputs.source_branch }}" == *"openwrt"* ]]; then
              REPO_URL="https://github.com/openwrt/openwrt"
              REPO_BRANCH="main"
              TAGS_NAME="official"
          elif [[ "${{ inputs.source_branch }}" == *"lede"* ]]; then
              REPO_URL="https://github.com/coolsnowwolf/lede"
              REPO_BRANCH="master"
              TAGS_NAME="lede"
          elif [[ "${{ inputs.source_branch }}" == *"immortalwrt"* ]]; then
              REPO_URL="https://github.com/immortalwrt/immortalwrt"
              REPO_BRANCH="openwrt-23.05"
              TAGS_NAME="immortalwrt"
          elif [[ "${{ inputs.source_branch }}" == *"Lienol"* ]]; then
              REPO_URL="https://github.com/Lienol/openwrt"
              REPO_BRANCH="22.03"
              TAGS_NAME="Lienol"
          else
              echo "Unknown source code repository."
              exit 1
          fi

          # Clone source code
          git clone -q --single-branch --depth=1 --branch=${REPO_BRANCH} ${REPO_URL} openwrt
          ln -sf /workdir/openwrt ${GITHUB_WORKSPACE}/openwrt

          # Set output information
          echo "build_tag=OpenWrt_${TAGS_NAME}_${{ inputs.openwrt_storage }}_$(date +"%Y.%m")" >> ${GITHUB_OUTPUT}
          echo -e "REPO_URL: [ ${REPO_URL} ]\nREPO_BRANCH: [ ${REPO_BRANCH} ]\nTAGS_NAME: [ ${TAGS_NAME} ]"
          df -hT ${PWD}
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Load custom feeds
        run: |
          [[ -f "${FEEDS_CONF}" ]] && cp -f ${FEEDS_CONF} openwrt/feeds.conf.default
          chmod +x ${DIY_P1_SH}
          cd openwrt/
          ${GITHUB_WORKSPACE}/${DIY_P1_SH}

      - name: Update feeds
        run: cd openwrt/ && ./scripts/feeds update -a

      - name: Install feeds
        run: cd openwrt/ && ./scripts/feeds install -a

      - name: Load custom configuration
        run: |
          [[ -d "files" ]] && mv -f files openwrt/files
          [[ -e "${CONFIG_FILE}" ]] && cp -f ${CONFIG_FILE} openwrt/.config
          chmod +x ${DIY_P2_SH}
          cd openwrt/
          ${GITHUB_WORKSPACE}/${DIY_P2_SH}

      - name: Download package
        id: package
        run: |
          cd openwrt/
          make defconfig
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile the OpenWrt
        id: compile
        run: |
          cd openwrt/
          echo -e "$(nproc) thread compile"
          make -j$(($(nproc) + 1)) V=s || make -j1 || make -j1 V=s
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Package armsr as openwrt
        if: ${{ env.compile_status }} == 'success' && !cancelled()
        uses: unifreq/openwrt_packit@master
        env:
          OPENWRT_ARMVIRT: openwrt/bin/targets/*/*/*.tar.gz
          KERNEL_VERSION_NAME: 5.4.x_6.1.x
          KERNEL_AUTO_LATEST: true
          PACKAGE_SOC: diy
          GZIP_IMGS: .xz
          SCRIPT_DIY_PATH: N1/mk_s905d_n1.sh
          WHOAMI: nantayo
          SW_FLOWOFFLOAD: 0
          SFE_FLOW: 0
          ENABLE_WIFI_K510: 0

      - name: Upload firmware to release
        uses: softprops/action-gh-release@master
        if: ${{ env.PACKAGED_STATUS == 'success' }} && !cancelled()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: OpenWrt_${{ env.PACKAGED_OUTPUTDATE }}
          files: ${{ env.PACKAGED_OUTPUTPATH }}/*.img.xz
          body: |
            首次使用建议全新刷写
            * 基本信息
            N1-Imm-23.05
            IP: 192.168.2.200
            账户: root
            密码: password

      - name: Delete old releases
        uses: dev-drprasad/delete-older-releases@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          keep_latest: 3
          delete_tags : true
